<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cninsure.system.entity">
	<!-- INSCSchedule -->
	<select id="INSCSchedule_insert" parameterType="com.cninsure.system.entity.INSCSchedule" resultType="int">
		insert into INSCSchedule
		(id,operator,createtime,modifytime,noti,tasktypeid,taskid,tasktypename,taskname,starttime,nexttime,iscron,period,periodunit,cronexp,state,ip,comment) 
		values
		(#{id},#{operator},#{createtime},#{modifytime},#{noti},#{tasktypeid},#{taskid},#{tasktypename},#{taskname},#{starttime},#{nexttime},#{iscron},#{period},#{periodunit},#{cronexp},#{state},#{ip},#{comment}) 
	</select>
	<select id="INSCSchedule_select" parameterType="Map" resultType="com.cninsure.system.entity.INSCSchedule">
		select * from INSCSchedule
		<where>
			<if test="tasktypeid != null">
				and tasktypeid = #{tasktypeid}
			</if>
			<if test="taskid != null">
				and taskid = #{taskid}
			</if>
			<if test="tasktypename != null">
				and tasktypename = #{tasktypename}
			</if>
			<if test="taskname != null">
				and taskname = #{taskname}
			</if>
			<if test="starttime != null">
				and starttime = #{starttime}
			</if>
			<if test="nexttime != null">
				and nexttime = #{nexttime}
			</if>
			<if test="iscron != null">
				and iscron = #{iscron}
			</if>
			<if test="period != null">
				and period = #{period}
			</if>
			<if test="periodunit != null">
				and periodunit = #{periodunit}
			</if>
			<if test="cronexp != null">
				and cronexp = #{cronexp}
			</if>
			<if test="state != null">
				and state = #{state}
			</if>
			<if test="ip != null">
				and ip = #{ip}
			</if>
			<if test="comment != null">
				and comment = #{comment}
			</if>
		</where>
	</select>
	<select id="INSCSchedule_selectOne" parameterType="Map" resultType="com.cninsure.system.entity.INSCSchedule">
		select * from INSCSchedule
		<where>
			<if test="tasktypeid != null">
				and tasktypeid = #{tasktypeid}
			</if>
			<if test="taskid != null">
				and taskid = #{taskid}
			</if>
			<if test="tasktypename != null">
				and tasktypename = #{tasktypename}
			</if>
			<if test="taskname != null">
				and taskname = #{taskname}
			</if>
			<if test="starttime != null">
				and starttime = #{starttime}
			</if>
			<if test="nexttime != null">
				and nexttime = #{nexttime}
			</if>
			<if test="iscron != null">
				and iscron = #{iscron}
			</if>
			<if test="period != null">
				and period = #{period}
			</if>
			<if test="periodunit != null">
				and periodunit = #{periodunit}
			</if>
			<if test="cronexp != null">
				and cronexp = #{cronexp}
			</if>
			<if test="state != null">
				and state = #{state}
			</if>
			<if test="ip != null">
				and ip = #{ip}
			</if>
			<if test="comment != null">
				and comment = #{comment}
			</if>
		</where>
		LIMIT 2
	</select>
	
	<select id="INSCSchedule_selectById" parameterType="String" resultType="com.cninsure.system.entity.INSCSchedule">
		select * from INSCSchedule where id = #{id}
	</select>
	<select id="INSCSchedule_deleteById" parameterType="String">
		delete from INSCSchedule where id = #{id}
	</select>
	<select id="INSCSchedule_updateById" parameterType="com.cninsure.system.entity.INSCSchedule">
		update INSCSchedule  set operator = #{operator},modifytime = #{modifytime},noti = #{noti},tasktypeid = #{tasktypeid},taskid = #{taskid},tasktypename = #{tasktypename},taskname = #{taskname},starttime = #{starttime},nexttime = #{nexttime},iscron = #{iscron},period = #{period},periodunit = #{periodunit},cronexp = #{cronexp},state = #{state},ip = #{ip},comment = #{comment} where id = #{id}
	</select>
	<select id="INSCSchedule_selectCount" parameterType="Map" resultType="Long">
		select count(1) from INSCSchedule
		<where>
			<if test="tasktypeid != null">
				and tasktypeid = #{tasktypeid}
			</if>
			<if test="taskid != null">
				and taskid = #{taskid}
			</if>
			<if test="tasktypename != null">
				and tasktypename = #{tasktypename}
			</if>
			<if test="taskname != null">
				and taskname = #{taskname}
			</if>
			<if test="starttime != null">
				and starttime = #{starttime}
			</if>
			<if test="nexttime != null">
				and nexttime = #{nexttime}
			</if>
			<if test="iscron != null">
				and iscron = #{iscron}
			</if>
			<if test="period != null">
				and period = #{period}
			</if>
			<if test="periodunit != null">
				and periodunit = #{periodunit}
			</if>
			<if test="cronexp != null">
				and cronexp = #{cronexp}
			</if>
			<if test="state != null">
				and state = #{state}
			</if>
			<if test="ip != null">
				and ip = #{ip}
			</if>
			<if test="comment != null">
				and comment = #{comment}
			</if>
		</where>
	</select>
	<select id="INSCSchedule_selectScheduleListPaging" parameterType="Map" resultType="Map">
		select t.id,
			t.tasktypename,
			t.taskname,
			t.iscron,
			DATE_FORMAT(t.nexttime,'%Y-%m-%d %H:%i:%s') nexttime,
			t.state,
			t.ip,
			t.comment 
		from INSCSchedule t
		<where>
			<if test="tasktypeid != null">
				and tasktypeid = #{tasktypeid}
			</if>
			<if test="taskid != null">
				and taskid = #{taskid}
			</if>
			<if test="tasktypename != null">
				and tasktypename = #{tasktypename}
			</if>
			<if test="taskname != null">
				and taskname = #{taskname}
			</if>
			<if test="starttime != null">
				and starttime = #{starttime}
			</if>
			<if test="nexttime != null">
				and nexttime = #{nexttime}
			</if>
			<if test="iscron != null">
				and iscron = #{iscron}
			</if>
			<if test="period != null">
				and period = #{period}
			</if>
			<if test="periodunit != null">
				and periodunit = #{periodunit}
			</if>
			<if test="cronexp != null">
				and cronexp = #{cronexp}
			</if>
			<if test="state != null">
				and state = #{state}
			</if>
			<if test="ip != null">
				and ip = #{ip}
			</if>
			<if test="comment != null">
				and comment = #{comment}
			</if>
		</where>
		
		order by 
		<if test="sort != null and order != null">
			#{sort}  #{order}
		</if>
		<if test="sort == null">
			 t.createtime desc 
		</if>
		limit #{offset},#{limit}
		
	</select>
	<select id="INSCSchedule_getScheduleStateListByIds" parameterType="String" resultType="com.cninsure.system.entity.INSCSchedule">
		select state,ip from INSCSchedule where id  in 
		<foreach item="scheduleId" index="index" collection="list" open="(" separator="," close=")">  
			#{scheduleId}  
		</foreach>
	</select>
</mapper>