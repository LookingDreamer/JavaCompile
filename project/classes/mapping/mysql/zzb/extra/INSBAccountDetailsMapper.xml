<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzb.extra.entity">
    <!-- INSBAccountdetails -->
    <select id="INSBAccountDetails_insert" parameterType="com.zzb.extra.entity.INSBAccountDetails" resultType="int">
		insert into INSBAccountDetails
		(id,operator,createtime,modifytime,noti,accountid,fundtype,fundsource,amount,balance,taskid)
		values
		(#{id},#{operator},#{createtime},#{modifytime},#{noti},#{accountid},#{fundtype},#{fundsource},#{amount},#{balance},#{taskid})
	</select>
    <select id="queryAccountDetailsList" parameterType="Map" resultType="Map">
       	select d.id AS id,d.accountid AS accountid,a.agentid AS agentid,g.name AS agentname,fs.codename AS
        fundsource,ft.codename AS fundtype,REPLACE(FORMAT(d.amount,2),',','') AS amount,REPLACE(FORMAT(d.balance,2),',','') AS balance,d.noti AS noti,
        DATE_FORMAT(d.createtime,'%Y-%m-%d %H:%i:%s') AS createtime from INSBAccountDetails d
        LEFT JOIN INSBAccount a ON d.accountid=a.id
        LEFT JOIN INSBAgent g ON g.id=a.agentid
        LEFT JOIN INSCcode ft ON ft.parentcode='accountDetails' and ft.codetype='fundType' and ft.codevalue=d.fundtype
        LEFT JOIN INSCcode fs ON fs.parentcode='accountDetails' and fs.codetype='fundSource' and
        fs.codevalue=d.fundsource
        <where>
            <if test="agentid != null and agentid != ''">
                and g.id = #{agentid}
            </if>
            <if test="agentname != null and agentname != ''">
                and g.name = #{agentname}
            </if>
            <if test="fundtype != null and fundtype!=''">
                and d.fundtype = #{fundtype}
            </if>
            <if test="fundsource != null and fundsource!=''">
                and d.fundsource = #{fundsource}
            </if>
            <if test="startdate != null and startdate != ''">
                and d.createtime &gt;= #{startdate}
            </if>
            <if test="enddate != null and enddate != ''">
                and d.createtime &lt;= #{enddate}
            </if>
        </where>
        ORDER BY
        <if test="sort != null and order != null">
            ${sort} ${order}
        </if>
        <if test="sort == null">
            d.createtime desc
        </if>
        <if test="offset != null and limit != null">
            LIMIT #{offset},#{limit}
        </if>
    </select>
    <select id="INSBAccountDetails_selectById" parameterType="String"
            resultType="com.zzb.extra.entity.INSBAccountDetails">
		select * from INSBAccountDetails where id = #{id}
	</select>
    <select id="INSBAccountDetails_deleteById" parameterType="String">
		delete from INSBAccountDetails where id = #{id}
	</select>
    <select id="INSBAccountDetails_updateById" parameterType="com.zzb.extra.entity.INSBAccountDetails">
		update INSBAccountDetails  set operator = #{operator},modifytime = #{modifytime},noti = #{noti},accountid = #{accountid},fundtype = #{fundtype},fundsource = #{fundsource},amount = #{amount},balance = #{balance},taskid = #{taskid} where id = #{id}
	</select>
    <select id="queryAccountDetailsListCount" parameterType="Map" resultType="Long">
       	select count(1) from INSBAccountDetails d
        LEFT JOIN INSBAccount a ON d.accountid=a.id
        LEFT JOIN INSBAgent g ON g.id=a.agentid
        <where>
            <if test="agentid != null and agentid != ''">
                and g.id = #{agentid}
            </if>
            <if test="agentname != null and agentname != ''">
                and g.name = #{agentname}
            </if>
            <if test="fundtype != null and fundtype!=''">
                and d.fundtype = #{fundtype}
            </if>
            <if test="fundsource != null and fundsource!=''">
                and d.fundsource = #{fundsource}
            </if>
            <if test="startdate != null and startdate != ''">
                and d.createtime &gt;= #{startdate}
            </if>
            <if test="enddate != null and enddate != ''">
                and d.createtime &lt;= #{enddate}
            </if>
        </where>
    </select>
    <select id="INSBAccountDetails_selectOne" parameterType="Map" resultType="com.zzb.extra.entity.INSBAccountDetails">
       	select * from INSBAccountDetails where accountid = #{accountid} and fundtype = #{fundtype} and fundsource = #{fundsource} and noti=#{noti} and createtime>DATE_SUB(CURDATE(), INTERVAL 3 MONTH)
        LIMIT 1
    </select>
    <select id="INSBAccountDetails_select" parameterType="Map" resultType="com.zzb.extra.entity.INSBAccountDetails">
        select * from INSBAccountDetails where taskid = #{taskid}
     </select>
    <select id="queryBalance" parameterType="String" resultType="Double">
       	select balance from INSBAccountDetails WHERE accountid=#{accountid} ORDER BY createtime DESC LIMIT 1
    </select>
    <select id="queryTodayIncome" parameterType="String" resultType="Double">
       	select SUM(amount) from INSBAccountDetails WHERE accountid=#{accountid} AND fundtype = '1' AND date_format(createtime,'%Y-%m-%d')=date_format(now(),'%Y-%m-%d')
    </select>
    <select id="queryBusinessList" parameterType="Map" resultType="Map">
            SELECT
                *
            FROM
                (
                    SELECT
                        a.jobnum,
                        a.taskid,
                        '出单人' as persontype,
                        a.`name` as `name`,
                        a.shortname,
                        a.carlicenseno,
                        a.insuredname,
                        DATE_FORMAT(a.insuredate,'%Y/%m/%d %H:%i:%s') as insuredate,
                        a.agreementname,
                        a.totalinsuredamount,
                        a.commercial_policyno,
                        a.commercial_num,
                        a.commercial_rate,
                        a.commercial_counts,
                        a.compulsory_policyno,
                        a.compulsory_num,
                        a.compulsory_rate,
                        a.compulsory_counts,
                        a.commission_total,
                        a.redpacket,
                        a.cashprize,
                        null as reward_rate,
                        null as reward_counts,
                        a.total_amount - a.reward_counts as total_amount
                    FROM
                        v_mini_businesslist AS a
                        where DATE_FORMAT(insuredate,'%Y-%m-%d')  &gt;= #{startDate}  and DATE_FORMAT(insuredate,'%Y-%m-%d') &lt;= #{endDate}
                    UNION ALL
                        SELECT
                            b.refjobnum as jobnum,
                            b.taskid,
                            '推荐人' as persontype,
                            b.refname as `name`,
                            b.shortname,
                            b.carlicenseno,
                            b.insuredname,
                            DATE_FORMAT(b.insuredate,'%Y/%m/%d %H:%i:%s') as insuredate,
                            b.agreementname,
                            b.totalinsuredamount,
                            b.commercial_policyno,
                            b.commercial_num,
                            null as commercial_rate,
                            null as commercial_counts,
                            b.compulsory_policyno,
                            b.compulsory_num,
                            null as compulsory_rate,
                            null as compulsory_counts,
                            null as commission_total,
                            null as redpacket,
                            null as cashprize,
                            b.reward_rate,
                            b.reward_counts,
                            b.reward_counts as total_amount
                        FROM
                            v_mini_businesslist AS b
                        WHERE
                            b.refname IS NOT NULL
                            AND DATE_FORMAT(insuredate,'%Y-%m-%d')  &gt;= #{startDate}  and DATE_FORMAT(insuredate,'%Y-%m-%d') &lt;= #{endDate}
                ) AS c

            ORDER BY
                c.insuredate asc,
                c.taskid desc,
               c.persontype asc


    </select>
    <select id="queryWithdrawListByDate" parameterType="Map" resultType="Map">
        SELECT e.jobnum,e.phone,DATE_FORMAT(b.createtime,'%Y-%m-%d') as withdraw_time,IFNULL(e.`name`,e.nickname) as `name`,
        REPLACE(FORMAT(b.amount,2),',','') AS amount,
        (SELECT count(*) + 1 as cnt FROM insbaccountwithdraw f
        WHERE f.accountid = b.accountid AND f.createtime &lt; b.createtime ) AS cnt,
        REPLACE(FORMAT(c.balance,2),',','') AS balance,e.`name` as cardowner,b.bankname,b.branch,b.cardnumber,code.codename as withdrawstatus
        FROM insbaccount a,insbaccountwithdraw b,
        ( SELECT accountid,c.balance FROM insbaccountdetails c
        WHERE c.createtime = (
        SELECT max(createtime)
        FROM	insbaccountdetails d
        WHERE d.accountid = c.accountid
        )
        ) c,insbagent e,insccode as code
        WHERE a.id = b.accountid
        AND a.id = c.accountid
        AND a.agentid = e.id
        AND e.usersource = 'minizzb'
        AND b.`status` =  code.codevalue
        AND code.parentcode = 'accountDetails'
        AND code.codetype='withdrawStatus'
        AND IFNULL(e.name,'NULL') not like '%测试%'
        AND IFNULL(e.nickname,'NULL') not like '%测试%'
        AND DATE_FORMAT(b.createtime,'%Y-%m-%d')  &gt;= #{startDate}  and DATE_FORMAT(b.createtime,'%Y-%m-%d') &lt;= #{endDate}
        <if test="withdrawStatus != null and withdrawStatus != ''">
            and b.`status` = #{withdrawStatus}
        </if>
        ORDER BY
        b.accountid,
        b.createtime asc
    </select>
    <select id="queryCashPrizeListByDate" parameterType="Map" resultType="Map">
       SELECT ag.jobnum,ag.phone,IFNULL(p.taskid, '') AS taskid,IFNULL(ag.`name`, ag.nickname) AS `name`,
	   DATE_FORMAT(
		p.createtime,
		'%Y-%m-%d'
	   ) AS createtime,
	activity.activityname,prize.prizename,`code`.codename,prize.counts,prize.noti
    FROM
        insbagentprize AS p
    LEFT JOIN insbagent AS ag ON p.agentid = ag.id
    AND ag.usersource = 'minizzb'
    LEFT JOIN insbmarketactivityprize AS activityprize ON activityprize.id = p.activityprizeid
    LEFT JOIN insbmarketactivity AS activity ON activityprize.activityid = activity.id
    LEFT JOIN insbmarketprize AS prize ON prize.id = activityprize.prizeid
    LEFT JOIN insccode AS `code` ON `code`.codevalue = prize.prizetype
    AND `code`.parentcode = 'market'
    AND `code`.codetype = 'prizeType'
    WHERE IFNULL(ag.name,'NULL') NOT LIKE '%测试%'
    AND IFNULL(ag.nickname,'NULL') NOT LIKE '%测试%'
    AND p.`status` = '1'
    AND prize.prizetype = '02'
    AND DATE_FORMAT(p.createtime,'%Y-%m-%d')  &gt;= #{startDate}  and DATE_FORMAT(p.createtime,'%Y-%m-%d') &lt;= #{endDate}
    ORDER BY
	p.createtime asc,
	p.agentid,
	prize.prizename
    </select>
    <select  id="queryPersonalWealthByDate" parameterType="Map" resultType="Map">
        select
        DATE_FORMAT(max(b.createtime),'%Y%m%d') as yyyymmdd,c.jobnum,IFNULL(c.`name`,c.nickname) as `name`,c.phone,b.accountid,
        SUM(IF(b.fundtype='1',b.amount,0)) as income,
        SUM(IF(b.fundtype='2',b.amount,0)) as expenses,
        (select IFNULL(e.balance,0)  from insbaccountdetails e
        where e.accountid=b.accountid
        and  e.createtime &lt;= max(b.createtime)
        ORDER BY e.createtime desc LIMIT 1 ) as balance
        from
        insbaccount as a
        INNER JOIN insbaccountdetails b on a.id = b.accountid
        INNER JOIN insbagent c on a.agentid = c.id and c.usersource='minizzb' AND IFNULL(c.`name`,'NULL') not like '%测试%' AND IFNULL(c.nickname,'NULL') not like '%测试%'
        where DATE_FORMAT(b.createtime,'%Y-%m-%d') BETWEEN #{startDate} and #{endDate}
        group by  c.jobnum,IFNULL(c.`name`,c.nickname),c.phone
        order by  DATE_FORMAT(max(b.createtime),'%Y%m%d') asc,c.name
    </select>
    <select id="queryPersonalWealthByMonth" parameterType="Map" resultType="Map">
        select
        DATE_FORMAT(b.createtime,'%Y-%m') AS yyyymm,c.jobnum,IFNULL(c.`name`,c.nickname) as `name`,c.phone,
        SUM(IF(b.fundtype='1',b.amount,0)) as income,
        SUM(IF(b.fundtype='2',b.amount,0)) as expenses,
        (select IFNULL(balance,0) from insbaccountdetails e
        where e.accountid=b.accountid
        and DATE_FORMAT(e.createtime,'%Y%m') = DATE_FORMAT(b.createtime,'%Y%m')
        ORDER BY e.createtime desc LIMIT 1 ) as balance
        from
        insbaccount as a
        INNER JOIN insbaccountdetails b on a.id = b.accountid
        INNER JOIN insbagent c on a.agentid = c.id and c.usersource='minizzb' AND IFNULL(c.`name`,'NULL') not like '%测试%' AND IFNULL(c.nickname,'NULL') not like '%测试%'
        where DATE_FORMAT(b.createtime,'%Y-%m') = #{startDate}
        group by DATE_FORMAT(b.createtime,'%Y-%m'),c.jobnum,IFNULL(c.`name`,c.nickname),c.phone
        order by DATE_FORMAT(b.createtime,'%Y-%m') asc,c.name
    </select>
    <select id="querySumBusinessByMonth"  parameterType="Map" resultType="Map">
        select * from v_mini_sumbusiness where yyyymm = #{startDate}
    </select>
    <select id="queryBusinessListByTaskid"  parameterType="Map" resultType="Map">
        select
         IFNULL(taskid,'') as '任务号',
         IFNULL(jobnum,'') as '工号',
         IFNULL(shortname,'') as '机构',
         IFNULL(DATE_FORMAT(insuredate,'%Y-%m-%d %H:%m:%i'),'') as '出单时间',
         IFNULL(name,'') as '出单人',
         IFNULL(carlicenseno,'') as '车牌号',
         IFNULL(agreementname,'') as '保险公司',
         IFNULL(ROUND(compulsory_num,2),'') as '交强险金额',
         IFNULL(ROUND(commercial_num ,2),'') as '商业险金额',
         IFNULL(ROUND(totalinsuredamount,2),'') as '保费总额',
         IFNULL(commercial_rate,'') as '商业险酬金率',
         IFNULL(compulsory_rate,'') as '交强险酬金率',
         IFNULL(refjobnum,'') as '推荐人',
         IFNULL(reward_rate,'') as '赏金率'
         from v_mini_uncompbusiness where taskid = #{taskid}
    </select>
    <select id="queryCommissionAndPrizeByTask"  parameterType="Map" resultType="Map">
        select b.codename,amount,'' as activityname from insbaccountdetails a,insccode b
        where b.parentcode = 'AccountDetails'
        and b.codetype= 'fundSource'
        and a.taskid  = #{taskid}
        and a.fundsource = b.codevalue
        and a.fundsource in ('101','102')
        union ALL
        select e.codename, a.counts,b.activityname
        from insbagentprize a,insbmarketactivity b,insbmarketactivityprize c,insbmarketprize d,insccode e
        where a.activityprizeid = c.id
        and c.activityid = b.id
        and c.prizeid = d.id
        and d.prizetype = e.codevalue
        and e.parentcode='Market'
        and e.codetype='prizeType'
        and a.agentid =  #{agentid}
        and LOCATE(#{taskid},a.noti) >1
    </select>

</mapper>