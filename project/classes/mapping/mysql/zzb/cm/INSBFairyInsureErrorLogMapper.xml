<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzb.cm.entity">
    <resultMap id="INSBFairyInsureErrorLogBaseResultMap" type="com.zzb.cm.entity.INSBFairyInsureErrorLog">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="taskId" jdbcType="VARCHAR" property="taskId"/>
        <result column="insuranceCompanyId" jdbcType="VARCHAR" property="insuranceCompanyId"/>
        <result column="errorCode" jdbcType="VARCHAR" property="errorCode"/>
        <result column="errorDesc" jdbcType="VARCHAR" property="errorDesc"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modifyTime" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="requestSuccess" jdbcType="BIT" property="requestsuccess" />
    </resultMap>
    <sql id="Base_Column_List">
		id, taskId, insuranceCompanyId, errorCode, errorDesc, operator, createTime, modifyTime, requestSuccess
	</sql>
    <insert id="INSBFairyInsureErrorLog_insert" parameterType="com.zzb.cm.entity.INSBFairyInsureErrorLog">
		insert into insbfairyinsureerrorlog (id, taskId, insuranceCompanyId,
      errorCode, errorDesc, operator,
      createTime, modifyTime, requestSuccess)
    values (#{id,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{insuranceCompanyId,jdbcType=VARCHAR},
      #{errorCode,jdbcType=VARCHAR}, #{errorDesc,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{requestSuccess,jdbcType=BIT})
	</insert>

    <select id="INSBFairyInsureErrorLog_selectOne" parameterType="com.zzb.cm.entity.INSBFairyInsureErrorLog"
            resultType="com.zzb.cm.entity.INSBFairyInsureErrorLog">
        select * from insbfairyinsureerrorlog where taskid=#{taskId} and insuranceCompanyId=#{insuranceCompanyId}
    </select>

    <select id="INSBFairyInsureErrorLog_updateById" parameterType="com.zzb.cm.entity.INSBFairyInsureErrorLog" resultType="com.zzb.cm.entity.INSBFairyInsureErrorLog">
        update insbfairyinsureerrorlog
        <set>
            <if test="taskId != null">
                taskId = #{taskId,jdbcType=VARCHAR},
            </if>
            <if test="insuranceCompanyId != null">
                insuranceCompanyId = #{insuranceCompanyId,jdbcType=VARCHAR},
            </if>
            <if test="errorCode != null">
                errorCode = #{errorCode,jdbcType=VARCHAR},
            </if>
            <if test="errorDesc != null">
                errorDesc = #{errorDesc,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modifyTime = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="requestSuccess != null">
                requestSuccess = #{requestSuccess,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="INSBFairyInsureErrorLog_select" parameterType="map" resultType="map">
       select
        a.taskId, a.insuranceCompanyId, a.errorCode, a.errorDesc, a.operator, a.modifytime as handleTime, a.requestSuccess,
        b.carlicenseno, c.totalpaymentamount as totalAmount,prov.prvshotname,c.agentname,paychn.paychannelname,
		CASE WHEN pih.`name` IS NULL THEN pi.`name` ELSE pih.`name` END AS insuredname 
        from insbfairyinsureerrorlog a
        left join insbcarinfo b on a.taskId=b.taskId
        left join insborder c on a.taskid=c.taskid and a.insurancecompanyid=c.prvid
        left join insborderpayment d on c.id = d.orderid
		LEFT JOIN insbinsured i ON i.taskid = a.taskId 
		LEFT JOIN insbinsuredhis ih ON ih.taskid = a.taskId AND ih.inscomcode = a.insuranceCompanyId
		LEFT JOIN insbperson pi ON pi.id = i.personid 
		LEFT JOIN insbperson pih ON pih.id = ih.personid 
		LEFT JOIN insbprovider prov ON prov.id = a.insuranceCompanyId 
		LEFT JOIN insbpaychannel paychn ON paychn.id=d.paychannelid
        <where>
            1=1
            <if test="taskId!=null">
                and a.taskId = #{taskId,jdbcType=VARCHAR}
            </if>
            <if test="startTime!=null and endTime!=null">
                and (a.createtime between #{startTime} and #{endTime})
            </if>
        </where>
        GROUP BY a.id
        <choose>
            <when test="sorting!=null">
                ORDER BY #{sorting}
            </when>
            <otherwise>
                ORDER BY handleTime DESC
            </otherwise>
        </choose>
        <if test="offset!=null and limit!=null">
            limit #{offset},#{limit}
        </if>
    </select>

    <select id="INSBFairyInsureErrorLog_selectCount" parameterType="map" resultType="long">
        select
        count(*) from 
       (select 1 from insbfairyinsureerrorlog a
        left join insbcarinfo b on a.taskId=b.taskId
        left join insborder c on a.taskid=c.taskid and a.insurancecompanyid=c.prvid
        left join insborderpayment d on c.id = d.orderid
		LEFT JOIN insbinsured i ON i.taskid = a.taskId 
		LEFT JOIN insbinsuredhis ih ON ih.taskid = a.taskId AND ih.inscomcode = a.insuranceCompanyId
		LEFT JOIN insbperson pi ON pi.id = i.personid 
		LEFT JOIN insbperson pih ON pih.id = ih.personid 
		LEFT JOIN insbprovider prov ON prov.id = a.insuranceCompanyId 
		LEFT JOIN insbpaychannel paychn ON paychn.id=d.paychannelid
        <where>
            1=1
            <if test="taskId!=null">
                and a.taskId = #{taskId,jdbcType=VARCHAR}
            </if>
            <if test="startTime!=null and endTime!=null">
                and (a.createtime between #{startTime} and #{endTime})
            </if>
        </where>
         GROUP BY a.id) a 
    </select>


</mapper>